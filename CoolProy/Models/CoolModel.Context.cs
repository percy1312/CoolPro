//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoolProy.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CoolEntities : DbContext
    {
        public CoolEntities()
            : base("name=CoolEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Det_empleado> Det_empleado { get; set; }
        public DbSet<Det_Producto> Det_Producto { get; set; }
        public DbSet<Empleado> Empleado { get; set; }
        public DbSet<estado> estado { get; set; }
        public DbSet<Inspeccion> Inspeccion { get; set; }
        public DbSet<Marca> Marca { get; set; }
        public DbSet<Modelo> Modelo { get; set; }
        public DbSet<Producto> Producto { get; set; }
        public DbSet<SolicitudInspeccion> SolicitudInspeccion { get; set; }
        public DbSet<tb_rol> tb_rol { get; set; }
        public DbSet<TipoServicio> TipoServicio { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
    
        public virtual int registrarDetalleInspeccion(Nullable<int> idDetPro, Nullable<int> idProducto, Nullable<int> idinspeccion, Nullable<int> cantidad, string observacion, string venta)
        {
            var idDetProParameter = idDetPro.HasValue ?
                new ObjectParameter("idDetPro", idDetPro) :
                new ObjectParameter("idDetPro", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var idinspeccionParameter = idinspeccion.HasValue ?
                new ObjectParameter("idinspeccion", idinspeccion) :
                new ObjectParameter("idinspeccion", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var ventaParameter = venta != null ?
                new ObjectParameter("venta", venta) :
                new ObjectParameter("venta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarDetalleInspeccion", idDetProParameter, idProductoParameter, idinspeccionParameter, cantidadParameter, observacionParameter, ventaParameter);
        }
    
        public virtual int registrarInspeccion(string observaciones, Nullable<int> idestado, Nullable<int> idsolicitud, Nullable<int> idtiposervi)
        {
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var idestadoParameter = idestado.HasValue ?
                new ObjectParameter("idestado", idestado) :
                new ObjectParameter("idestado", typeof(int));
    
            var idsolicitudParameter = idsolicitud.HasValue ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(int));
    
            var idtiposerviParameter = idtiposervi.HasValue ?
                new ObjectParameter("idtiposervi", idtiposervi) :
                new ObjectParameter("idtiposervi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarInspeccion", observacionesParameter, idestadoParameter, idsolicitudParameter, idtiposerviParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_obtenerUltimaInspeccion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_obtenerUltimaInspeccion");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_obtenerUltimaSolicitud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_obtenerUltimaSolicitud");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_obtenerUltimoCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_obtenerUltimoCliente");
        }
    
        public virtual int usp_obtenerUltimoEquipo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_obtenerUltimoEquipo");
        }
    }
}
